# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build and Test bootstrap - ${{matrix.go-version}} ${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Fetch at least 2 commits so that Iceberg doesn't break
      run: git fetch --unshallow

    - name: Compile
      if: matrix.os != 'macos-latest'
      run: make
      env:
        CMAKE_GENERATOR: Unix Makefiles

    - name: Compile - bootstrap only
      if: matrix.os == 'macos-latest'
      run: make -C bootstrap

    - name: Run tests
      if: matrix.os != 'macos-latest'
      run: make test

    - name: Run tests - bootstrap only
      if: matrix.os == 'macos-latest'
      run: make -C bootstrap test

    - name: XUnit Viewer
      if: matrix.os == 'ubuntu-latest'
      id: xunit-viewer
      uses: AutoModality/action-xunit-viewer@v1.0.1
      with:
        # File/Folder of test results
        results: bootstrap/test-reports # default is test-reports

    - name: Attach the report
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v1
      with:
        name: upload-result
        path: ${{ steps.xunit-viewer.outputs.report-dir }}
